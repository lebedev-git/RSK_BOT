import json
import aiohttp
from config import load_config

config = load_config()

# –ò—Å–ø–æ–ª—å–∑—É–µ–º DeepSeek –≤–º–µ—Å—Ç–æ OpenRouter
API_URL = "https://api.deepseek.com/v1/chat/completions"
API_KEY = "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"  # –í–∞—à API –∫–ª—é—á
MODEL = "deepseek-chat"

# –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è –±–æ—Ç–∞
SYSTEM_PROMPT = """üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å —Å–µ–≥–æ–¥–Ω—è?üòä"""

def process_content(content: str) -> str:
    return content.replace('<think>', '').replace('</think>', '')

async def get_ai_response(message: str) -> str:
    try:
        headers = {
            "Authorization": f"Bearer {API_KEY}",
            "Content-Type": "application/json"
        }
        
        data = {
            "model": MODEL,
            "messages": [
                {"role": "system", "content": "–í—ã - –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è Telegram –±–æ—Ç–∞."},
                {"role": "user", "content": message}
            ],
            "temperature": 0.7,
            "max_tokens": 1000
        }

        async with aiohttp.ClientSession() as session:
            async with session.post(API_URL, headers=headers, json=data) as response:
                if response.status == 200:
                    result = await response.json()
                    return result['choices'][0]['message']['content']
                else:
                    response_text = await response.text()
                    print(f"Error: {response.status} - {response_text}")
                    return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞."
                    
    except Exception as e:
        print(f"Error in AI service: {str(e)}")
        return "–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω." 